<?php

// Data functions (insert, update, delete, form) for table Catalog

// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

function Catalog_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('Catalog');
	if(!$arrPerm['insert']) return false;

	$data = [
		'CatalogNo' => Request::val('CatalogNo', ''),
		'CatalogTitle' => Request::val('CatalogTitle', ''),
		'Description' => Request::val('Description', ''),
		'Restrictions' => Request::val('Restrictions', ''),
		'TypeID' => Request::lookup('TypeID', ''),
		'GroupID' => Request::lookup('GroupID', ''),
		'DonorText' => Request::val('DonorText', ''),
		'AdditionalInfo' => Request::multipleChoice('AdditionalInfo', ''),
		'CatalogValueText' => Request::val('CatalogValueText', ''),
		'Quantity' => Request::val('Quantity', '1'),
	];


	// hook: Catalog_before_insert
	if(function_exists('Catalog_before_insert')) {
		$args = [];
		if(!Catalog_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('Catalog', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('Catalog', $recID, calculated_fields()['Catalog']);

	// hook: Catalog_after_insert
	if(function_exists('Catalog_after_insert')) {
		$res = sql("SELECT * FROM `Catalog` WHERE `ID`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!Catalog_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	// record owner is current user
	$recordOwner = getLoggedMemberID();
	set_record_owner('Catalog', $recID, $recordOwner);

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) Catalog_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function Catalog_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function Catalog_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('Catalog', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: Catalog_before_delete
	if(function_exists('Catalog_before_delete')) {
		$args = [];
		if(!Catalog_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: Donations
	$res = sql("SELECT `ID` FROM `Catalog` WHERE `ID`='{$selected_id}'", $eo);
	$ID = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `Donations` WHERE `CatalogID`='" . makeSafe($ID[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'Donations', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'Donations', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'Catalog_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'Catalog_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: Transactions
	$res = sql("SELECT `ID` FROM `Catalog` WHERE `ID`='{$selected_id}'", $eo);
	$ID = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `Transactions` WHERE `CatalogID`='" . makeSafe($ID[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'Transactions', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'Transactions', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'Catalog_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'Catalog_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `Catalog` WHERE `ID`='{$selected_id}'", $eo);

	// hook: Catalog_after_delete
	if(function_exists('Catalog_after_delete')) {
		$args = [];
		Catalog_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='Catalog' AND `pkValue`='{$selected_id}'", $eo);
}

function Catalog_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('Catalog', $selected_id, 'edit')) return false;

	$data = [
		'CatalogNo' => Request::val('CatalogNo', ''),
		'CatalogTitle' => Request::val('CatalogTitle', ''),
		'Description' => Request::val('Description', ''),
		'Restrictions' => Request::val('Restrictions', ''),
		'TypeID' => Request::lookup('TypeID', ''),
		'GroupID' => Request::lookup('GroupID', ''),
		'DonorText' => Request::val('DonorText', ''),
		'AdditionalInfo' => Request::multipleChoice('AdditionalInfo', ''),
		'CatalogValueText' => Request::val('CatalogValueText', ''),
		'Quantity' => Request::val('Quantity', ''),
	];

	// get existing values
	$old_data = getRecord('Catalog', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: Catalog_before_update
	if(function_exists('Catalog_before_update')) {
		$args = ['old_data' => $old_data];
		if(!Catalog_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'Catalog', 
		backtick_keys_once($set), 
		['`ID`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="Catalog_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('Catalog', $data['selectedID'], calculated_fields()['Catalog']);

	// hook: Catalog_after_update
	if(function_exists('Catalog_after_update')) {
		$res = sql("SELECT * FROM `Catalog` WHERE `ID`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['ID'];
		$args = ['old_data' => $old_data];
		if(!Catalog_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update record update timestamp
	set_record_owner('Catalog', $selected_id);
}

function Catalog_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = false;

	// mm: get table permissions
	$arrPerm = getTablePermissions('Catalog');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_TypeID = Request::val('filterer_TypeID');
	$filterer_GroupID = Request::val('filterer_GroupID');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: TypeID
	$combo_TypeID = new DataCombo;
	// combobox: GroupID
	$combo_GroupID = new DataCombo;
	// combobox: AdditionalInfo
	$combo_AdditionalInfo = new Combo;
	$combo_AdditionalInfo->ListType = 3;
	$combo_AdditionalInfo->MultipleSeparator = ', ';
	$combo_AdditionalInfo->ListBoxHeight = 10;
	$combo_AdditionalInfo->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/Catalog.AdditionalInfo.csv')) {
		$AdditionalInfo_data = addslashes(implode('', @file(__DIR__ . '/hooks/Catalog.AdditionalInfo.csv')));
		$combo_AdditionalInfo->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($AdditionalInfo_data))));
		$combo_AdditionalInfo->ListData = $combo_AdditionalInfo->ListItem;
	} else {
		$combo_AdditionalInfo->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Needs Dsiplay;;Needs Gift Certificate;;Needs Addendum"))));
		$combo_AdditionalInfo->ListData = $combo_AdditionalInfo->ListItem;
	}
	$combo_AdditionalInfo->SelectName = 'AdditionalInfo';

	if($selected_id) {
		if(!check_record_permission('Catalog', $selected_id, 'view'))
			return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = check_record_permission('Catalog', $selected_id, 'edit');

		// can delete?
		$AllowDelete = check_record_permission('Catalog', $selected_id, 'delete');

		$res = sql("SELECT * FROM `Catalog` WHERE `ID`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'Catalog_view.php', false);
		}
		$combo_TypeID->SelectedData = $row['TypeID'];
		$combo_GroupID->SelectedData = $row['GroupID'];
		$combo_AdditionalInfo->SelectedData = $row['AdditionalInfo'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_TypeID->SelectedData = $filterer_TypeID;
		$combo_GroupID->SelectedData = $filterer_GroupID;
	}
	$combo_TypeID->HTML = '<span id="TypeID-container' . $rnd1 . '"></span><input type="hidden" name="TypeID" id="TypeID' . $rnd1 . '" value="' . html_attr($combo_TypeID->SelectedData) . '">';
	$combo_TypeID->MatchText = '<span id="TypeID-container-readonly' . $rnd1 . '"></span><input type="hidden" name="TypeID" id="TypeID' . $rnd1 . '" value="' . html_attr($combo_TypeID->SelectedData) . '">';
	$combo_GroupID->HTML = '<span id="GroupID-container' . $rnd1 . '"></span><input type="hidden" name="GroupID" id="GroupID' . $rnd1 . '" value="' . html_attr($combo_GroupID->SelectedData) . '">';
	$combo_GroupID->MatchText = '<span id="GroupID-container-readonly' . $rnd1 . '"></span><input type="hidden" name="GroupID" id="GroupID' . $rnd1 . '" value="' . html_attr($combo_GroupID->SelectedData) . '">';
	$combo_AdditionalInfo->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_TypeID__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['TypeID'] : htmlspecialchars($filterer_TypeID, ENT_QUOTES)); ?>"};
		AppGini.current_GroupID__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['GroupID'] : htmlspecialchars($filterer_GroupID, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(TypeID_reload__RAND__) == 'function') TypeID_reload__RAND__();
				if(typeof(GroupID_reload__RAND__) == 'function') GroupID_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function TypeID_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#TypeID-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_TypeID__RAND__.value, t: 'Catalog', f: 'TypeID' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="TypeID"]').val(resp.results[0].id);
							$j('[id=TypeID-container-readonly__RAND__]').html('<span class="match-text" id="TypeID-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogTypes_view_parent]').hide(); } else { $j('.btn[id=CatalogTypes_view_parent]').show(); }


							if(typeof(TypeID_update_autofills__RAND__) == 'function') TypeID_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'Catalog', f: 'TypeID' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_TypeID__RAND__.value = e.added.id;
				AppGini.current_TypeID__RAND__.text = e.added.text;
				$j('[name="TypeID"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogTypes_view_parent]').hide(); } else { $j('.btn[id=CatalogTypes_view_parent]').show(); }


				if(typeof(TypeID_update_autofills__RAND__) == 'function') TypeID_update_autofills__RAND__();
			});

			if(!$j("#TypeID-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_TypeID__RAND__.value, t: 'Catalog', f: 'TypeID' },
					success: function(resp) {
						$j('[name="TypeID"]').val(resp.results[0].id);
						$j('[id=TypeID-container-readonly__RAND__]').html('<span class="match-text" id="TypeID-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogTypes_view_parent]').hide(); } else { $j('.btn[id=CatalogTypes_view_parent]').show(); }

						if(typeof(TypeID_update_autofills__RAND__) == 'function') TypeID_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_TypeID__RAND__.value, t: 'Catalog', f: 'TypeID' },
				success: function(resp) {
					$j('[id=TypeID-container__RAND__], [id=TypeID-container-readonly__RAND__]').html('<span class="match-text" id="TypeID-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogTypes_view_parent]').hide(); } else { $j('.btn[id=CatalogTypes_view_parent]').show(); }

					if(typeof(TypeID_update_autofills__RAND__) == 'function') TypeID_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function GroupID_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#GroupID-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_GroupID__RAND__.value, t: 'Catalog', f: 'GroupID' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="GroupID"]').val(resp.results[0].id);
							$j('[id=GroupID-container-readonly__RAND__]').html('<span class="match-text" id="GroupID-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogGroups_view_parent]').hide(); } else { $j('.btn[id=CatalogGroups_view_parent]').show(); }


							if(typeof(GroupID_update_autofills__RAND__) == 'function') GroupID_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'Catalog', f: 'GroupID' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_GroupID__RAND__.value = e.added.id;
				AppGini.current_GroupID__RAND__.text = e.added.text;
				$j('[name="GroupID"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogGroups_view_parent]').hide(); } else { $j('.btn[id=CatalogGroups_view_parent]').show(); }


				if(typeof(GroupID_update_autofills__RAND__) == 'function') GroupID_update_autofills__RAND__();
			});

			if(!$j("#GroupID-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_GroupID__RAND__.value, t: 'Catalog', f: 'GroupID' },
					success: function(resp) {
						$j('[name="GroupID"]').val(resp.results[0].id);
						$j('[id=GroupID-container-readonly__RAND__]').html('<span class="match-text" id="GroupID-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogGroups_view_parent]').hide(); } else { $j('.btn[id=CatalogGroups_view_parent]').show(); }

						if(typeof(GroupID_update_autofills__RAND__) == 'function') GroupID_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_GroupID__RAND__.value, t: 'Catalog', f: 'GroupID' },
				success: function(resp) {
					$j('[id=GroupID-container__RAND__], [id=GroupID-container-readonly__RAND__]').html('<span class="match-text" id="GroupID-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CatalogGroups_view_parent]').hide(); } else { $j('.btn[id=CatalogGroups_view_parent]').show(); }

					if(typeof(GroupID_update_autofills__RAND__) == 'function') GroupID_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/Catalog_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/Catalog_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'CatalogID details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return Catalog_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return Catalog_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate)
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return Catalog_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

		if($AllowDelete)
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#CatalogNo').replaceWith('<div class=\"form-control-static\" id=\"CatalogNo\">' + (jQuery('#CatalogNo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#CatalogTitle').replaceWith('<div class=\"form-control-static\" id=\"CatalogTitle\">' + (jQuery('#CatalogTitle').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#TypeID').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#TypeID_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#GroupID').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#GroupID_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#DonorText').replaceWith('<div class=\"form-control-static\" id=\"DonorText\">' + (jQuery('#DonorText').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#AdditionalInfo').replaceWith('<div class=\"form-control-static\" id=\"AdditionalInfo\">' + (jQuery('#AdditionalInfo').val() || '') + '</div>'); jQuery('#AdditionalInfo-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_AdditionalInfo').remove();\n";
		$jsReadOnly .= "\tjQuery('#CatalogValueText').replaceWith('<div class=\"form-control-static\" id=\"CatalogValueText\">' + (jQuery('#CatalogValueText').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Quantity').replaceWith('<div class=\"form-control-static\" id=\"Quantity\">' + (jQuery('#Quantity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(TypeID)%%>', $combo_TypeID->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(TypeID)%%>', $combo_TypeID->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(TypeID)%%>', urlencode($combo_TypeID->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(GroupID)%%>', $combo_GroupID->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(GroupID)%%>', $combo_GroupID->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(GroupID)%%>', urlencode($combo_GroupID->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(AdditionalInfo)%%>', $combo_AdditionalInfo->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(AdditionalInfo)%%>', $combo_AdditionalInfo->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['TypeID' => ['CatalogTypes', 'Catalog Type'], 'GroupID' => ['CatalogGroups', 'Grouping'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(ID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CatalogNo)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CatalogTitle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Description)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Restrictions)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(TypeID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(GroupID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(DonorText)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(AdditionalInfo)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CatalogValueText)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Quantity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid3)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid4)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid5)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid6)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid7)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid8)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid9)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid10)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid11)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bid12)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Values)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ValueTxt)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ID)%%>', safe_html($urow['ID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ID)%%>', html_attr($row['ID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ID)%%>', urlencode($urow['ID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CatalogNo)%%>', safe_html($urow['CatalogNo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CatalogNo)%%>', html_attr($row['CatalogNo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogNo)%%>', urlencode($urow['CatalogNo']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CatalogTitle)%%>', safe_html($urow['CatalogTitle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CatalogTitle)%%>', html_attr($row['CatalogTitle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogTitle)%%>', urlencode($urow['CatalogTitle']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<textarea name="Description" id="Description" rows="5">' . safe_html(htmlspecialchars_decode($row['Description'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<div id="Description" class="form-control-static">' . $row['Description'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(Description)%%>', nl2br($row['Description']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Description)%%>', urlencode($urow['Description']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(Restrictions)%%>', '<textarea name="Restrictions" id="Restrictions" rows="5">' . safe_html(htmlspecialchars_decode($row['Restrictions'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(Restrictions)%%>', '<div id="Restrictions" class="form-control-static">' . $row['Restrictions'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(Restrictions)%%>', nl2br($row['Restrictions']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Restrictions)%%>', urlencode($urow['Restrictions']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(TypeID)%%>', safe_html($urow['TypeID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(TypeID)%%>', html_attr($row['TypeID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(TypeID)%%>', urlencode($urow['TypeID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(GroupID)%%>', safe_html($urow['GroupID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(GroupID)%%>', html_attr($row['GroupID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(GroupID)%%>', urlencode($urow['GroupID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(DonorText)%%>', safe_html($urow['DonorText']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(DonorText)%%>', html_attr($row['DonorText']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DonorText)%%>', urlencode($urow['DonorText']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(AdditionalInfo)%%>', safe_html($urow['AdditionalInfo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(AdditionalInfo)%%>', html_attr($row['AdditionalInfo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(AdditionalInfo)%%>', urlencode($urow['AdditionalInfo']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CatalogValueText)%%>', safe_html($urow['CatalogValueText']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CatalogValueText)%%>', html_attr($row['CatalogValueText']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogValueText)%%>', urlencode($urow['CatalogValueText']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Quantity)%%>', safe_html($urow['Quantity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Quantity)%%>', html_attr($row['Quantity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Quantity)%%>', urlencode($urow['Quantity']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid1)%%>', safe_html($urow['bid1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid1)%%>', urlencode($urow['bid1']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid2)%%>', safe_html($urow['bid2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid2)%%>', urlencode($urow['bid2']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid3)%%>', safe_html($urow['bid3']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid3)%%>', urlencode($urow['bid3']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid4)%%>', safe_html($urow['bid4']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid4)%%>', urlencode($urow['bid4']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid5)%%>', safe_html($urow['bid5']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid5)%%>', urlencode($urow['bid5']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid6)%%>', safe_html($urow['bid6']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid6)%%>', urlencode($urow['bid6']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid7)%%>', safe_html($urow['bid7']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid7)%%>', urlencode($urow['bid7']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid8)%%>', safe_html($urow['bid8']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid8)%%>', urlencode($urow['bid8']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid9)%%>', safe_html($urow['bid9']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid9)%%>', urlencode($urow['bid9']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid10)%%>', safe_html($urow['bid10']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid10)%%>', urlencode($urow['bid10']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid11)%%>', safe_html($urow['bid11']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid11)%%>', urlencode($urow['bid11']), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid12)%%>', safe_html($urow['bid12']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid12)%%>', urlencode($urow['bid12']), $templateCode);
		$templateCode = str_replace('<%%VALUE(Values)%%>', safe_html($urow['Values']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Values)%%>', urlencode($urow['Values']), $templateCode);
		$templateCode = str_replace('<%%VALUE(ValueTxt)%%>', safe_html($urow['ValueTxt']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ValueTxt)%%>', urlencode($urow['ValueTxt']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(ID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CatalogNo)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogNo)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CatalogTitle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogTitle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(Description)%%>', '<textarea name="Description" id="Description" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(Restrictions)%%>', '<textarea name="Restrictions" id="Restrictions" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(TypeID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(TypeID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(GroupID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(GroupID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(DonorText)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DonorText)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(AdditionalInfo)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(AdditionalInfo)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CatalogValueText)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CatalogValueText)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Quantity)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Quantity)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid2)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid2)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid3)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid3)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid4)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid4)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid5)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid5)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid6)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid6)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid7)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid7)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid8)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid8)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid9)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid9)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid10)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid10)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid11)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid11)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bid12)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bid12)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Values)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Values)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ValueTxt)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ValueTxt)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('Catalog');
	if($selected_id) {
		$jdata = get_joined_record('Catalog', $selected_id);
		if($jdata === false) $jdata = get_defaults('Catalog');
		$rdata = $row;
	}
	$templateCode .= loadView('Catalog-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: Catalog_dv
	if(function_exists('Catalog_dv')) {
		$args = [];
		Catalog_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}