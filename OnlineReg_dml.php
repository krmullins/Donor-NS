<?php

// Data functions (insert, update, delete, form) for table OnlineReg

// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

function OnlineReg_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('OnlineReg');
	if(!$arrPerm['insert']) return false;

	$data = [
		'Name' => Request::val('Name', ''),
		'eMail' => Request::val('eMail', ''),
		'Phone' => Request::val('Phone', ''),
		'Address1' => Request::val('Address1', ''),
		'Address2' => Request::val('Address2', ''),
		'City' => Request::val('City', ''),
		'State' => Request::val('State', ''),
		'Zip' => Request::val('Zip', ''),
		'Contry' => Request::val('Contry', 'US'),
		'PurchaseType' => Request::val('PurchaseType', ''),
		'IndividualDetails' => Request::val('IndividualDetails', ''),
		'TableDetails' => Request::val('TableDetails', ''),
		'Guest1' => Request::val('Guest1', ''),
		'Guest1Meal' => Request::val('Guest1Meal', ''),
		'Guest2' => Request::val('Guest2', ''),
		'Guest2Meal' => Request::val('Guest2Meal', ''),
		'Guest3' => Request::val('Guest3', ''),
		'Guest3Meal' => Request::val('Guest3Meal', ''),
	];


	// hook: OnlineReg_before_insert
	if(function_exists('OnlineReg_before_insert')) {
		$args = [];
		if(!OnlineReg_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('OnlineReg', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('OnlineReg', $recID, calculated_fields()['OnlineReg']);

	// hook: OnlineReg_after_insert
	if(function_exists('OnlineReg_after_insert')) {
		$res = sql("SELECT * FROM `OnlineReg` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!OnlineReg_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	// record owner is current user
	$recordOwner = getLoggedMemberID();
	set_record_owner('OnlineReg', $recID, $recordOwner);

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) OnlineReg_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function OnlineReg_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function OnlineReg_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('OnlineReg', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: OnlineReg_before_delete
	if(function_exists('OnlineReg_before_delete')) {
		$args = [];
		if(!OnlineReg_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `OnlineReg` WHERE `id`='{$selected_id}'", $eo);

	// hook: OnlineReg_after_delete
	if(function_exists('OnlineReg_after_delete')) {
		$args = [];
		OnlineReg_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='OnlineReg' AND `pkValue`='{$selected_id}'", $eo);
}

function OnlineReg_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('OnlineReg', $selected_id, 'edit')) return false;

	$data = [
		'Name' => Request::val('Name', ''),
		'eMail' => Request::val('eMail', ''),
		'Phone' => Request::val('Phone', ''),
		'Address1' => Request::val('Address1', ''),
		'Address2' => Request::val('Address2', ''),
		'City' => Request::val('City', ''),
		'State' => Request::val('State', ''),
		'Zip' => Request::val('Zip', ''),
		'Contry' => Request::val('Contry', ''),
		'PurchaseType' => Request::val('PurchaseType', ''),
		'IndividualDetails' => Request::val('IndividualDetails', ''),
		'TableDetails' => Request::val('TableDetails', ''),
		'Guest1' => Request::val('Guest1', ''),
		'Guest1Meal' => Request::val('Guest1Meal', ''),
		'Guest2' => Request::val('Guest2', ''),
		'Guest2Meal' => Request::val('Guest2Meal', ''),
		'Guest3' => Request::val('Guest3', ''),
		'Guest3Meal' => Request::val('Guest3Meal', ''),
	];

	// get existing values
	$old_data = getRecord('OnlineReg', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: OnlineReg_before_update
	if(function_exists('OnlineReg_before_update')) {
		$args = ['old_data' => $old_data];
		if(!OnlineReg_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'OnlineReg', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="OnlineReg_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('OnlineReg', $data['selectedID'], calculated_fields()['OnlineReg']);

	// hook: OnlineReg_after_update
	if(function_exists('OnlineReg_after_update')) {
		$res = sql("SELECT * FROM `OnlineReg` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!OnlineReg_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update record update timestamp
	set_record_owner('OnlineReg', $selected_id);
}

function OnlineReg_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = false;

	// mm: get table permissions
	$arrPerm = getTablePermissions('OnlineReg');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: PurchaseType
	$combo_PurchaseType = new Combo;
	$combo_PurchaseType->ListType = 2;
	$combo_PurchaseType->MultipleSeparator = ', ';
	$combo_PurchaseType->ListBoxHeight = 10;
	$combo_PurchaseType->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.PurchaseType.csv')) {
		$PurchaseType_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.PurchaseType.csv')));
		$combo_PurchaseType->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($PurchaseType_data))));
		$combo_PurchaseType->ListData = $combo_PurchaseType->ListItem;
	} else {
		$combo_PurchaseType->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Individual Tickets;;Purchase a Table"))));
		$combo_PurchaseType->ListData = $combo_PurchaseType->ListItem;
	}
	$combo_PurchaseType->SelectName = 'PurchaseType';
	// combobox: IndividualDetails
	$combo_IndividualDetails = new Combo;
	$combo_IndividualDetails->ListType = 0;
	$combo_IndividualDetails->MultipleSeparator = ', ';
	$combo_IndividualDetails->ListBoxHeight = 10;
	$combo_IndividualDetails->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.IndividualDetails.csv')) {
		$IndividualDetails_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.IndividualDetails.csv')));
		$combo_IndividualDetails->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($IndividualDetails_data))));
		$combo_IndividualDetails->ListData = $combo_IndividualDetails->ListItem;
	} else {
		$combo_IndividualDetails->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Early Bird Tickets - $65.00;;After August 15 Ticket - $70.00"))));
		$combo_IndividualDetails->ListData = $combo_IndividualDetails->ListItem;
	}
	$combo_IndividualDetails->SelectName = 'IndividualDetails';
	// combobox: TableDetails
	$combo_TableDetails = new Combo;
	$combo_TableDetails->ListType = 0;
	$combo_TableDetails->MultipleSeparator = ', ';
	$combo_TableDetails->ListBoxHeight = 10;
	$combo_TableDetails->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.TableDetails.csv')) {
		$TableDetails_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.TableDetails.csv')));
		$combo_TableDetails->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($TableDetails_data))));
		$combo_TableDetails->ListData = $combo_TableDetails->ListItem;
	} else {
		$combo_TableDetails->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("1 - $480;;2 - $960;;3 - $1440"))));
		$combo_TableDetails->ListData = $combo_TableDetails->ListItem;
	}
	$combo_TableDetails->SelectName = 'TableDetails';
	// combobox: Guest1Meal
	$combo_Guest1Meal = new Combo;
	$combo_Guest1Meal->ListType = 0;
	$combo_Guest1Meal->MultipleSeparator = ', ';
	$combo_Guest1Meal->ListBoxHeight = 10;
	$combo_Guest1Meal->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.Guest1Meal.csv')) {
		$Guest1Meal_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.Guest1Meal.csv')));
		$combo_Guest1Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($Guest1Meal_data))));
		$combo_Guest1Meal->ListData = $combo_Guest1Meal->ListItem;
	} else {
		$combo_Guest1Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Fish;;Chicken;;Vegi"))));
		$combo_Guest1Meal->ListData = $combo_Guest1Meal->ListItem;
	}
	$combo_Guest1Meal->SelectName = 'Guest1Meal';
	// combobox: Guest2Meal
	$combo_Guest2Meal = new Combo;
	$combo_Guest2Meal->ListType = 0;
	$combo_Guest2Meal->MultipleSeparator = ', ';
	$combo_Guest2Meal->ListBoxHeight = 10;
	$combo_Guest2Meal->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.Guest2Meal.csv')) {
		$Guest2Meal_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.Guest2Meal.csv')));
		$combo_Guest2Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($Guest2Meal_data))));
		$combo_Guest2Meal->ListData = $combo_Guest2Meal->ListItem;
	} else {
		$combo_Guest2Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Fish;;Chicken;;Vegi"))));
		$combo_Guest2Meal->ListData = $combo_Guest2Meal->ListItem;
	}
	$combo_Guest2Meal->SelectName = 'Guest2Meal';
	// combobox: Guest3Meal
	$combo_Guest3Meal = new Combo;
	$combo_Guest3Meal->ListType = 0;
	$combo_Guest3Meal->MultipleSeparator = ', ';
	$combo_Guest3Meal->ListBoxHeight = 10;
	$combo_Guest3Meal->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/OnlineReg.Guest3Meal.csv')) {
		$Guest3Meal_data = addslashes(implode('', @file(__DIR__ . '/hooks/OnlineReg.Guest3Meal.csv')));
		$combo_Guest3Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($Guest3Meal_data))));
		$combo_Guest3Meal->ListData = $combo_Guest3Meal->ListItem;
	} else {
		$combo_Guest3Meal->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Fish;;Chicken;;Vegi"))));
		$combo_Guest3Meal->ListData = $combo_Guest3Meal->ListItem;
	}
	$combo_Guest3Meal->SelectName = 'Guest3Meal';

	if($selected_id) {
		if(!check_record_permission('OnlineReg', $selected_id, 'view'))
			return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = check_record_permission('OnlineReg', $selected_id, 'edit');

		// can delete?
		$AllowDelete = check_record_permission('OnlineReg', $selected_id, 'delete');

		$res = sql("SELECT * FROM `OnlineReg` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'OnlineReg_view.php', false);
		}
		$combo_PurchaseType->SelectedData = $row['PurchaseType'];
		$combo_IndividualDetails->SelectedData = $row['IndividualDetails'];
		$combo_TableDetails->SelectedData = $row['TableDetails'];
		$combo_Guest1Meal->SelectedData = $row['Guest1Meal'];
		$combo_Guest2Meal->SelectedData = $row['Guest2Meal'];
		$combo_Guest3Meal->SelectedData = $row['Guest3Meal'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_PurchaseType->SelectedText = (isset($filterField[1]) && $filterField[1] == '10' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
		$combo_IndividualDetails->SelectedText = (isset($filterField[1]) && $filterField[1] == '11' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
		$combo_TableDetails->SelectedText = (isset($filterField[1]) && $filterField[1] == '12' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
		$combo_Guest1Meal->SelectedText = (isset($filterField[1]) && $filterField[1] == '14' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
		$combo_Guest2Meal->SelectedText = (isset($filterField[1]) && $filterField[1] == '16' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
		$combo_Guest3Meal->SelectedText = (isset($filterField[1]) && $filterField[1] == '18' && $filterOperator[1] == '<=>' ? $filterValue[1] : entitiesToUTF8(''));
	}
	$combo_PurchaseType->Render();
	$combo_IndividualDetails->Render();
	$combo_TableDetails->Render();
	$combo_Guest1Meal->Render();
	$combo_Guest2Meal->Render();
	$combo_Guest3Meal->Render();

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function() {
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/OnlineReg_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/OnlineReg_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'OnlineReg details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return OnlineReg_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return OnlineReg_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate)
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return OnlineReg_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

		if($AllowDelete)
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#Name').replaceWith('<div class=\"form-control-static\" id=\"Name\">' + (jQuery('#Name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#eMail').replaceWith('<div class=\"form-control-static\" id=\"eMail\">' + (jQuery('#eMail').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#eMail, #eMail-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#Phone').replaceWith('<div class=\"form-control-static\" id=\"Phone\">' + (jQuery('#Phone').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Address1').replaceWith('<div class=\"form-control-static\" id=\"Address1\">' + (jQuery('#Address1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Address2').replaceWith('<div class=\"form-control-static\" id=\"Address2\">' + (jQuery('#Address2').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#City').replaceWith('<div class=\"form-control-static\" id=\"City\">' + (jQuery('#City').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#State').replaceWith('<div class=\"form-control-static\" id=\"State\">' + (jQuery('#State').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Zip').replaceWith('<div class=\"form-control-static\" id=\"Zip\">' + (jQuery('#Zip').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Contry').replaceWith('<div class=\"form-control-static\" id=\"Contry\">' + (jQuery('#Contry').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=PurchaseType]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=PurchaseType]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#IndividualDetails').replaceWith('<div class=\"form-control-static\" id=\"IndividualDetails\">' + (jQuery('#IndividualDetails').val() || '') + '</div>'); jQuery('#IndividualDetails-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#TableDetails').replaceWith('<div class=\"form-control-static\" id=\"TableDetails\">' + (jQuery('#TableDetails').val() || '') + '</div>'); jQuery('#TableDetails-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#Guest1').replaceWith('<div class=\"form-control-static\" id=\"Guest1\">' + (jQuery('#Guest1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Guest1Meal').replaceWith('<div class=\"form-control-static\" id=\"Guest1Meal\">' + (jQuery('#Guest1Meal').val() || '') + '</div>'); jQuery('#Guest1Meal-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#Guest2').replaceWith('<div class=\"form-control-static\" id=\"Guest2\">' + (jQuery('#Guest2').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Guest2Meal').replaceWith('<div class=\"form-control-static\" id=\"Guest2Meal\">' + (jQuery('#Guest2Meal').val() || '') + '</div>'); jQuery('#Guest2Meal-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#Guest3').replaceWith('<div class=\"form-control-static\" id=\"Guest3\">' + (jQuery('#Guest3').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Guest3Meal').replaceWith('<div class=\"form-control-static\" id=\"Guest3Meal\">' + (jQuery('#Guest3Meal').val() || '') + '</div>'); jQuery('#Guest3Meal-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(PurchaseType)%%>', $combo_PurchaseType->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(PurchaseType)%%>', $combo_PurchaseType->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(IndividualDetails)%%>', $combo_IndividualDetails->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(IndividualDetails)%%>', $combo_IndividualDetails->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(TableDetails)%%>', $combo_TableDetails->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(TableDetails)%%>', $combo_TableDetails->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(Guest1Meal)%%>', $combo_Guest1Meal->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Guest1Meal)%%>', $combo_Guest1Meal->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(Guest2Meal)%%>', $combo_Guest2Meal->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Guest2Meal)%%>', $combo_Guest2Meal->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(Guest3Meal)%%>', $combo_Guest3Meal->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(Guest3Meal)%%>', $combo_Guest3Meal->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = [];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(Name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(eMail)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Phone)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Address1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Address2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(City)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(State)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Zip)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Contry)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(PurchaseType)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(IndividualDetails)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(TableDetails)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest1Meal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest2Meal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest3)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Guest3Meal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Name)%%>', safe_html($urow['Name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Name)%%>', html_attr($row['Name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Name)%%>', urlencode($urow['Name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(eMail)%%>', safe_html($urow['eMail']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(eMail)%%>', html_attr($row['eMail']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(eMail)%%>', urlencode($urow['eMail']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Phone)%%>', safe_html($urow['Phone']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Phone)%%>', html_attr($row['Phone']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Phone)%%>', urlencode($urow['Phone']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Address1)%%>', safe_html($urow['Address1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Address1)%%>', html_attr($row['Address1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address1)%%>', urlencode($urow['Address1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Address2)%%>', safe_html($urow['Address2']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Address2)%%>', html_attr($row['Address2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address2)%%>', urlencode($urow['Address2']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(City)%%>', safe_html($urow['City']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(City)%%>', html_attr($row['City']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(City)%%>', urlencode($urow['City']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(State)%%>', safe_html($urow['State']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(State)%%>', html_attr($row['State']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(State)%%>', urlencode($urow['State']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Zip)%%>', safe_html($urow['Zip']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Zip)%%>', html_attr($row['Zip']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Zip)%%>', urlencode($urow['Zip']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Contry)%%>', safe_html($urow['Contry']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Contry)%%>', html_attr($row['Contry']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Contry)%%>', urlencode($urow['Contry']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(PurchaseType)%%>', safe_html($urow['PurchaseType']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(PurchaseType)%%>', html_attr($row['PurchaseType']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(PurchaseType)%%>', urlencode($urow['PurchaseType']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(IndividualDetails)%%>', safe_html($urow['IndividualDetails']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(IndividualDetails)%%>', html_attr($row['IndividualDetails']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(IndividualDetails)%%>', urlencode($urow['IndividualDetails']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(TableDetails)%%>', safe_html($urow['TableDetails']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(TableDetails)%%>', html_attr($row['TableDetails']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(TableDetails)%%>', urlencode($urow['TableDetails']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest1)%%>', safe_html($urow['Guest1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest1)%%>', html_attr($row['Guest1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest1)%%>', urlencode($urow['Guest1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest1Meal)%%>', safe_html($urow['Guest1Meal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest1Meal)%%>', html_attr($row['Guest1Meal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest1Meal)%%>', urlencode($urow['Guest1Meal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest2)%%>', safe_html($urow['Guest2']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest2)%%>', html_attr($row['Guest2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest2)%%>', urlencode($urow['Guest2']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest2Meal)%%>', safe_html($urow['Guest2Meal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest2Meal)%%>', html_attr($row['Guest2Meal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest2Meal)%%>', urlencode($urow['Guest2Meal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest3)%%>', safe_html($urow['Guest3']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest3)%%>', html_attr($row['Guest3']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest3)%%>', urlencode($urow['Guest3']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Guest3Meal)%%>', safe_html($urow['Guest3Meal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Guest3Meal)%%>', html_attr($row['Guest3Meal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest3Meal)%%>', urlencode($urow['Guest3Meal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(Name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(eMail)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(eMail)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Phone)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Phone)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Address1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Address2)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Address2)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(City)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(City)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(State)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(State)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Zip)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Zip)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Contry)%%>', 'US', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Contry)%%>', urlencode('US'), $templateCode);
		$templateCode = str_replace('<%%VALUE(PurchaseType)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(PurchaseType)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(IndividualDetails)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(IndividualDetails)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(TableDetails)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(TableDetails)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest1Meal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest1Meal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest2)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest2)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest2Meal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest2Meal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest3)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest3)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Guest3Meal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Guest3Meal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('eMailEdit')) { document.getElementById('eMailEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('eMailEditLink')) { document.getElementById('eMailEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('OnlineReg');
	if($selected_id) {
		$jdata = get_joined_record('OnlineReg', $selected_id);
		if($jdata === false) $jdata = get_defaults('OnlineReg');
		$rdata = $row;
	}
	$templateCode .= loadView('OnlineReg-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: OnlineReg_dv
	if(function_exists('OnlineReg_dv')) {
		$args = [];
		OnlineReg_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}