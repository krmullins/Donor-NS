<?php
// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/Tickets.php');
	include_once(__DIR__ . '/Tickets_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('Tickets');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'Tickets';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`Tickets`.`ID`" => "ID",
		"`Tickets`.`UsersName`" => "UsersName",
		"IF(    CHAR_LENGTH(`Bidders1`.`BidNo`), CONCAT_WS('',   `Bidders1`.`BidNo`), '') /* Bidder Number */" => "BidderID",
		"IF(    CHAR_LENGTH(`Bidders1`.`TablePreference`), CONCAT_WS('',   `Bidders1`.`TablePreference`), '') /* Table Preference */" => "TablePreference",
		"IF(    CHAR_LENGTH(`Tables1`.`TableNo`) || CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableNo`, ' - ', `Tables1`.`TableName`), '') /* Table */" => "TableID",
		"IF(    CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableName`), '') /* Table Name */" => "TableName",
		"`Tickets`.`SeatingPosition`" => "SeatingPosition",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`Tickets`.`ID`',
		2 => 2,
		3 => '`Bidders1`.`BidNo`',
		4 => '`Bidders1`.`TablePreference`',
		5 => 5,
		6 => '`Tables1`.`TableName`',
		7 => 7,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`Tickets`.`ID`" => "ID",
		"`Tickets`.`UsersName`" => "UsersName",
		"IF(    CHAR_LENGTH(`Bidders1`.`BidNo`), CONCAT_WS('',   `Bidders1`.`BidNo`), '') /* Bidder Number */" => "BidderID",
		"IF(    CHAR_LENGTH(`Bidders1`.`TablePreference`), CONCAT_WS('',   `Bidders1`.`TablePreference`), '') /* Table Preference */" => "TablePreference",
		"IF(    CHAR_LENGTH(`Tables1`.`TableNo`) || CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableNo`, ' - ', `Tables1`.`TableName`), '') /* Table */" => "TableID",
		"IF(    CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableName`), '') /* Table Name */" => "TableName",
		"`Tickets`.`SeatingPosition`" => "SeatingPosition",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`Tickets`.`ID`" => "ID",
		"`Tickets`.`UsersName`" => "Guest Name",
		"IF(    CHAR_LENGTH(`Bidders1`.`BidNo`), CONCAT_WS('',   `Bidders1`.`BidNo`), '') /* Bidder Number */" => "Bidder Number",
		"IF(    CHAR_LENGTH(`Bidders1`.`TablePreference`), CONCAT_WS('',   `Bidders1`.`TablePreference`), '') /* Table Preference */" => "Table Preference",
		"IF(    CHAR_LENGTH(`Tables1`.`TableNo`) || CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableNo`, ' - ', `Tables1`.`TableName`), '') /* Table */" => "Table",
		"IF(    CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableName`), '') /* Table Name */" => "Table Name",
		"`Tickets`.`SeatingPosition`" => "Seating Position",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`Tickets`.`ID`" => "ID",
		"`Tickets`.`UsersName`" => "UsersName",
		"IF(    CHAR_LENGTH(`Bidders1`.`BidNo`), CONCAT_WS('',   `Bidders1`.`BidNo`), '') /* Bidder Number */" => "BidderID",
		"IF(    CHAR_LENGTH(`Bidders1`.`TablePreference`), CONCAT_WS('',   `Bidders1`.`TablePreference`), '') /* Table Preference */" => "TablePreference",
		"IF(    CHAR_LENGTH(`Tables1`.`TableNo`) || CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableNo`, ' - ', `Tables1`.`TableName`), '') /* Table */" => "TableID",
		"IF(    CHAR_LENGTH(`Tables1`.`TableName`), CONCAT_WS('',   `Tables1`.`TableName`), '') /* Table Name */" => "TableName",
		"`Tickets`.`SeatingPosition`" => "SeatingPosition",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['BidderID' => 'Bidder Number', 'TableID' => 'Table', ];

	$x->QueryFrom = "`Tickets` LEFT JOIN `Bidders` as Bidders1 ON `Bidders1`.`ID`=`Tickets`.`BidderID` LEFT JOIN `Tables` as Tables1 ON `Tables1`.`ID`=`Tickets`.`TableID` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->AllowAdminShowSQL = 0;
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'Tickets_view.php';
	$x->TableTitle = 'Tickets';
	$x->TableIcon = 'resources/table_icons/32Px - 394.png';
	$x->PrimaryKey = '`Tickets`.`ID`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Guest Name', 'Bidder Number', 'Table Preference', 'Table', 'Table Name', 'Seating Position', ];
	$x->ColFieldName = ['UsersName', 'BidderID', 'TablePreference', 'TableID', 'TableName', 'SeatingPosition', ];
	$x->ColNumber  = [2, 3, 4, 5, 6, 7, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/Tickets_templateTV.html';
	$x->SelectedTemplate = 'templates/Tickets_templateTVS.html';
	$x->TemplateDV = 'templates/Tickets_templateDV.html';
	$x->TemplateDVP = 'templates/Tickets_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: Tickets_init
	$render = true;
	if(function_exists('Tickets_init')) {
		$args = [];
		$render = Tickets_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: Tickets_header
	$headerCode = '';
	if(function_exists('Tickets_header')) {
		$args = [];
		$headerCode = Tickets_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: Tickets_footer
	$footerCode = '';
	if(function_exists('Tickets_footer')) {
		$args = [];
		$footerCode = Tickets_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
